// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  username     String   @unique
  name         String
  passwordHash String?
  role         Role     @default(USER)
}

enum Role {
  USER
  ADMIN
}

model Customer {
  id           String                @id @default(uuid())
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @default(now())
  name         String
  phoneNumbers CustomerPhoneNumber[]
}

model CustomerPhoneNumber {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  phoneNumber String
  Customer    Customer @relation(fields: [customerId], references: [id])
  customerId  String
}

model WaitingList {
  id                        String                      @id @default(uuid())
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @default(now())
  name                      String
  active                    Boolean                     @default(false)
  customers                 WaitingListCustomer[]
  WaitingListCallingHistory WaitingListCallingHistory[]
}

model WaitingListCustomer {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  name          String
  phoneNumber   String
  remarks       String?
  order         Int
  status        CallingStatus @default(NOT_CALLED)
  waitingList   WaitingList   @relation(fields: [waitingListId], references: [id])
  waitingListId String
}

enum CallingStatus {
  NOT_CALLED
  CALLING
  ARRIVED
}

model WaitingListCallingHistory {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  messageId     String
  message       String
  waitingList   WaitingList @relation(fields: [waitingListId], references: [id])
  waitingListId String
  customerId    String?
  customerName  String?
  phoneNumber   String?
}

model Configuration {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  key       String   @unique
  value     String
}
