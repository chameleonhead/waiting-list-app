{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS CloudFormation WaitingListApp template.",

  "Parameters": {
    "DBUser": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "WaitingListDb database admin account name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "WaitingListDb database admin account password",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9@]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    }
  },

  "Mappings": {
    "Region2Principal": {
      "ap-east-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-northeast-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-northeast-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-northeast-3": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-south-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-southeast-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-southeast-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ca-central-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "cn-north-1": {
        "EC2Principal": "ec2.amazonaws.com.cn",
        "OpsWorksPrincipal": "opsworks.amazonaws.com.cn"
      },
      "cn-northwest-1": {
        "EC2Principal": "ec2.amazonaws.com.cn",
        "OpsWorksPrincipal": "opsworks.amazonaws.com.cn"
      },
      "eu-central-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "eu-north-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "eu-west-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "eu-west-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "eu-west-3": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "me-south-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "sa-east-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-east-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-east-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-west-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-west-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      }
    }
  },

  "Conditions": {
    "Is-EC2-VPC": {
      "Fn::Or": [
        { "Fn::Equals": [{ "Ref": "AWS::Region" }, "eu-central-1"] },
        { "Fn::Equals": [{ "Ref": "AWS::Region" }, "cn-north-1"] }
      ]
    },
    "Is-EC2-Classic": { "Fn::Not": [{ "Condition": "Is-EC2-VPC" }] }
  },

  "Resources": {
    "WebServerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::FindInMap": [
                      "Region2Principal",
                      { "Ref": "AWS::Region" },
                      "EC2Principal"
                    ]
                  }
                ]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/"
      }
    },

    "WebServerRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "WebServerRole",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "NotAction": "iam:*",
              "Resource": "*"
            }
          ]
        },
        "Roles": [{ "Ref": "WebServerRole" }]
      }
    },

    "WebServerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{ "Ref": "WebServerRole" }]
      }
    },

    "WaitingListAppApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "Description": "AWS Elastic Beanstalk WaitingListApp Application"
      }
    },

    "WaitingListAppApplicationVersion": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "Description": "Version 1.0",
        "ApplicationName": { "Ref": "WaitingListAppApplication" },
        "SourceBundle": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              ["elasticbeanstalk-samples", { "Ref": "AWS::Region" }]
            ]
          },
          "S3Key": "nodejs-sample.zip"
        }
      }
    },

    "WaitingListAppConfigurationTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": { "Ref": "WaitingListAppApplication" },
        "Description": "Default Configuration Version 1.0",
        "SolutionStackName": "64bit Amazon Linux 2 v5.3.2 running Node.js 14",
        "OptionSettings": [
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_CONNECTION",
            "Value": "mysql"
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_HOST",
            "Value": { "Fn::GetAtt": ["WaitingListAppDB", "Endpoint.Address"] }
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_PORT",
            "Value": { "Fn::GetAtt": ["WaitingListAppDB", "Endpoint.Port"] }
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_DATABASE",
            "Value": "WaitingListDb"
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_USERNAME",
            "Value": { "Ref": "DBUser" }
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_PASSWORD",
            "Value": { "Ref": "DBPassword" }
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_SYNCHRONIZE",
            "Value": "true"
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_LOGGING",
            "Value": "true"
          },
          {
            "Namespace": "aws:elasticbeanstalk:application:environment",
            "OptionName": "TYPEORM_ENTITIES",
            "Value": "src/entity/**/*.js"
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "SecurityGroups",
            "Value": { "Ref": "InstanceSecurityGroup" }
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": { "Ref": "WebServerInstanceProfile" }
          }
        ]
      }
    },

    "WaitingListAppEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "Description": "AWS Elastic Beanstalk Environment running WaitingListApp Application",
        "ApplicationName": { "Ref": "WaitingListAppApplication" },
        "TemplateName": { "Ref": "WaitingListAppConfigurationTemplate" },
        "VersionLabel": { "Ref": "WaitingListAppApplicationVersion" }
      }
    },

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS allows ingress from EC2 instances in this group.",
        "SecurityGroupIngress": []
      }
    },

    "DBEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "Is-EC2-VPC",
      "Properties": {
        "GroupDescription": "Open database for access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupName": { "Ref": "InstanceSecurityGroup" }
          }
        ]
      }
    },

    "DBSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Condition": "Is-EC2-Classic",
      "Properties": {
        "DBSecurityGroupIngress": {
          "EC2SecurityGroupName": { "Ref": "InstanceSecurityGroup" }
        },
        "GroupDescription": "database access"
      }
    },

    "WaitingListAppDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBName": "WaitingListDb",
        "MasterUsername": { "Ref": "DBUser" },
        "DBInstanceClass": "db.t2.small",
        "AllocatedStorage": "5",
        "MasterUserPassword": { "Ref": "DBPassword" },
        "VPCSecurityGroups": {
          "Fn::If": [
            "Is-EC2-VPC",
            [{ "Fn::GetAtt": ["DBEC2SecurityGroup", "GroupId"] }],
            { "Ref": "AWS::NoValue" }
          ]
        },
        "DBSecurityGroups": {
          "Fn::If": [
            "Is-EC2-Classic",
            [{ "Ref": "DBSecurityGroup" }],
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    }
  },

  "Outputs": {
    "URL": {
      "Description": "URL of the AWS Elastic Beanstalk Environment",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            { "Fn::GetAtt": ["WaitingListAppEnvironment", "EndpointURL"] }
          ]
        ]
      }
    }
  }
}
